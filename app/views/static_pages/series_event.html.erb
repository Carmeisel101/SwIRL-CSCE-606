<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Skhedule.com - Series Event Form</title>
    <!-- Bootstrap CSS -->
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body, html {
            height: 100%;
            margin: 0;
            font-family: 'Arial', sans-serif;
            background-color: #000; /* Black background for the whole page */
            color: #fff; /* White text color for better contrast */
            display: flex;
            justify-content: center;
            align-items: center;
            text-align: center;
        }

        .event-card {
            background-color: #333; /* Dark background for the card */
            padding: 20px;
            border-radius: 10px; /* Rounded corners for the card */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
            width: auto; /* Width adjusted to content */
        }

        .event-header h1 {
            margin: 0;
            color: #fff; /* White text for the header */
        }

        .form-input, .gradient-btn {
            background-color: #555; /* Darker background for input and buttons */
            border: 1px solid #666; /* Slightly lighter border color */
            color: #fff; /* White text color */
            padding: 10px;
            margin-bottom: 15px; /* Margin for spacing */
            border-radius: 5px; /* Rounded corners */
            width: calc(100% - 22px); /* Full width minus padding and border */
        }

        .gradient-btn {
            background-color: #555; /* Button background */
            padding: 10px 20px;
            font-size: 16px; /* Font size for buttons */
            letter-spacing: 1px; /* Spacing between letters for buttons */
            transition: background-color 0.3s, transform 0.3s;
        }

        .gradient-btn:hover {
            background-color: #666; /* Slightly lighter on hover */
            cursor: pointer; /* Change cursor to pointer */
            transform: translateY(-2px); /* Moves button up slightly on hover */
        }

        /* Style for the file input to make it consistent with the theme */
        .form-input[type="file"] {
            padding: 0;
            margin-top: -5px; /* Align with other text inputs */
        }

        /* Style for the 'Back' button to make it stand out */
        .back-btn {
            background-color: transparent; /* Transparent background */
            color: #bbb; /* Lighter text color */
            text-decoration: none; /* Remove underline */
            padding: 10px 20px;
            margin-top: 10px;
            display: inline-block; /* Allow it to be inline with other content */
            border: none; /* No border */
        }

        .back-btn:hover {
            color: #fff; /* White color on hover */
            background-color: #444; /* Dark background on hover */
        }

        .date-time-pair {
            display: flex;
            align-items: center;
        }

        .date-time-pair label {
            flex: 0.3;
            text-align: right;
            margin-right: 10px;
        }

        .date-time-pair input {
            flex: 0.7;
        }

        .remove-date-time {
            background-color: #ff0000;
            border: none;
            color: #fff;
            padding: 5px 10px;
            margin-left: 10px;
            cursor: pointer;
        }
    </style>
</head>
<body>

<div class="event-card">
    <div class="event-header">
        <h1>SKHEDULE.COM</h1>
    </div>
    <h2>Series Event Form</h2>
    <form id="event-form">
        <input type="text" class="form-input" placeholder="Event name" required>
        <input type="text" class="form-input" placeholder="Event venue" required>
        <div class="date-time-pair">
            <label for="event-date">Date:</label>
            <input type="date" class="form-input" id="event-date" required>
        </div>
        <div class="date-time-pair">
            <label for="start-time">Start Time:</label>
            <input type="time" class="form-input" id="start-time" required>
        </div>
        <div class="date-time-pair">
            <label for="end-time">End Time:</label>
            <input type="time" class="form-input" id="end-time" required>
        </div>
        <div id="date-time-pairs">
            <!-- Date-time input fields will be added here -->
        </div>
        <button type="button" class="gradient-btn" id="add-date-time">ADD DATE-TIME PAIR</button>
        <label for="csv-file" style="color: #fff;">Add CSV file only:</label>
        <input type="file" class="form-input" id="csv-file" accept=".csv" required>
        <button type="submit" class="gradient-btn">SUBMIT</button>
        <button type="button" class="back-btn" onclick="history.back()">BACK</button>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        const addButton = document.getElementById("add-date-time");
        const datePairsContainer = document.getElementById("date-time-pairs");

        addButton.addEventListener("click", function() {
            const dateTimePair = document.createElement("div");
            dateTimePair.classList.add("date-time-pair");
            dateTimePair.innerHTML = `
                <label>Date:</label>
                <input type="date" class="form-input" required>
                <label>Start Time:</label>
                <input type="time" class="form-input" required>
                <label>End Time:</label>
                <input type="time" class="form-input" required>
                <button type="button" class="gradient-btn remove-date-time">REMOVE</button>
            `;
            datePairsContainer.appendChild(dateTimePair);

            // Add functionality to remove the specific date-time pair
            const removeButton = dateTimePair.querySelector(".remove-date-time");
            removeButton.addEventListener("click", function() {
                datePairsContainer.removeChild(dateTimePair);
            });
        });

        // Add form validation
        const eventForm = document.getElementById("event-form");
        eventForm.addEventListener("submit", function(event) {
            const eventDate = document.getElementById("event-date").value;
            const startTime = document.getElementById("start-time").value;
            const endTime = document.getElementById("end-time").value;

            // Perform your validation here
            if (!isValidDate(eventDate) || !isValidTime(startTime) || !isValidTime(endTime) || startTime >= endTime) {
                event.preventDefault(); // Prevent form submission
                alert("Invalid date/time input. Please check and correct your inputs.");
            }
        });

        // Date validation function
        function isValidDate(date) {
            return !isNaN(Date.parse(date));
        }

        // Time validation function
        function isValidTime(time) {
            const timeParts = time.split(":");
            if (timeParts.length === 2) {
                const hours = parseInt(timeParts[0]);
                const minutes = parseInt(timeParts[1]);
                return !isNaN(hours) && !isNaN(minutes) && hours >= 0 && hours <= 23 && minutes >= 0 && minutes <= 59;
            }
            return false;
        }
    });
</script>

</body>
</html>
